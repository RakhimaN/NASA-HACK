"""
Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–Ω–µ—à–Ω–∏–º API
–°–æ–∑–¥–∞–µ—Ç —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Ö–æ–∂–∏–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –æ—Ç NASA
"""

import pandas as pd
import numpy as np
from pathlib import Path


class MockWeatherData:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä mock –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    @staticmethod
    def generate_climatology(latitude: float, longitude: float, 
                            start_year: int = 1990, end_year: int = 2023) -> pd.DataFrame:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ –∫–ª–∏–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        
        –ò–º–∏—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –æ—Ç NASA POWER API
        """
        days_in_year = 365
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∏—Ä–æ—Ç—ã
        # –ú–æ—Å–∫–≤–∞ ~55¬∞N - –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω—ã–π –∫–ª–∏–º–∞—Ç
        base_temp = 5.0  # –°—Ä–µ–¥–Ω—è—è –≥–æ–¥–æ–≤–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
        if abs(latitude) < 30:
            base_temp = 25.0  # –¢—Ä–æ–ø–∏–∫–∏
        elif abs(latitude) < 50:
            base_temp = 15.0  # –£–º–µ—Ä–µ–Ω–Ω—ã–π –ø–æ—è—Å
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –≥–æ–¥–∞
        data = []
        
        for day in range(1, days_in_year + 1):
            # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å —Å–µ–∑–æ–Ω–Ω—ã–º–∏ –∫–æ–ª–µ–±–∞–Ω–∏—è–º–∏
            # –°–∏–Ω—É—Å–æ–∏–¥–∞ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ —Å–º–µ–Ω—ã —Å–µ–∑–æ–Ω–æ–≤
            seasonal_effect = 15 * np.sin(2 * np.pi * (day - 80) / 365)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —à—É–º
            daily_variation = np.random.normal(0, 3)
            
            temp_mean = base_temp + seasonal_effect + daily_variation
            temp_max = temp_mean + np.random.uniform(3, 8)
            temp_min = temp_mean - np.random.uniform(3, 8)
            
            # –û—Å–∞–¥–∫–∏ (–±–æ–ª—å—à–µ –ª–µ—Ç–æ–º –¥–ª—è –∫–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –∫–ª–∏–º–∞—Ç–∞)
            precip_seasonal = 1.5 if 120 < day < 240 else 1.0
            precipitation = np.random.gamma(2, 1) * precip_seasonal
            
            # –í–µ—Ç–µ—Ä (–±–æ–ª—å—à–µ –∑–∏–º–æ–π –∏ –≤–µ—Å–Ω–æ–π)
            wind_seasonal = 1.3 if day < 100 or day > 300 else 0.8
            wind_speed = np.random.gamma(3, 1.5) * wind_seasonal
            
            # –í–ª–∞–∂–Ω–æ—Å—Ç—å (–≤—ã—à–µ –ª–µ—Ç–æ–º)
            humidity_seasonal = 15 if 150 < day < 250 else 0
            humidity = 50 + humidity_seasonal + np.random.normal(0, 10)
            humidity = np.clip(humidity, 20, 95)
            
            # –î–∞–≤–ª–µ–Ω–∏–µ
            pressure = 101 + np.random.normal(0, 1)
            
            data.append({
                'day_of_year': day,
                'T2M': temp_mean,
                'T2M_MAX': temp_max,
                'T2M_MIN': temp_min,
                'PRECTOTCORR': precipitation,
                'WS2M': wind_speed,
                'RH2M': humidity,
                'PS': pressure,
                'CLOUD_AMT': cloudiness
            })
        
        df = pd.DataFrame(data)
        return df
    
    @staticmethod
    def save_mock_data(latitude: float, longitude: float, 
                       cache_dir: str = './data/cache'):
        """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å mock –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à"""
        cache_path = Path(cache_dir)
        cache_path.mkdir(parents=True, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        df = MockWeatherData.generate_climatology(latitude, longitude)
        
        # –°–æ–∑–¥–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∫–∞–∫ –≤ data_service
        import hashlib
        key_str = f"{latitude}_{longitude}_1990_2023"
        cache_key = hashlib.md5(key_str.encode()).hexdigest()
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        filepath = cache_path / f"{cache_key}.parquet"
        df.to_parquet(filepath)
        
        print(f"‚úì Mock –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {filepath}")
        return df


class MockWeatherDataSource:
    """
    –ò—Å—Ç–æ—á–Ω–∏–∫ mock –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    –ó–∞–º–µ–Ω—è–µ—Ç NASA –∏ Open-Meteo API
    """
    
    def __init__(self, cache_dir: str = "./data/cache"):
        self.cache_dir = Path(cache_dir)
        self.cache_dir.mkdir(parents=True, exist_ok=True)
    
    def get_historical_data(self, latitude: float, longitude: float,
                           start_year: int = 1990, end_year: int = 2023) -> pd.DataFrame:
        """
        –ü–æ–ª—É—á–∏—Ç—å mock –¥–∞–Ω–Ω—ã–µ
        """
        print(f"üß™ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ MOCK –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        print(f"   –õ–æ–∫–∞—Ü–∏—è: ({latitude}, {longitude})")
        print(f"   –ü–µ—Ä–∏–æ–¥: {start_year}-{end_year}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
        df = MockWeatherData.generate_climatology(latitude, longitude, start_year, end_year)
        
        print(f"‚úì –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(df)} –¥–Ω–µ–π –¥–∞–Ω–Ω—ã—Ö")
        
        return df


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
def create_test_dataset(locations: list = None):
    """
    –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–∞–±–æ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤
    
    Args:
        locations: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (–Ω–∞–∑–≤–∞–Ω–∏–µ, —à–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞)
    """
    if locations is None:
        locations = [
            ("–ú–æ—Å–∫–≤–∞", 55.7558, 37.6173),
            ("–ù—å—é-–ô–æ—Ä–∫", 40.7128, -74.0060),
            ("–¢–æ–∫–∏–æ", 35.6762, 139.6503),
            ("–õ–æ–Ω–¥–æ–Ω", 51.5074, -0.1278),
            ("–°–∏–¥–Ω–µ–π", -33.8688, 151.2093),
        ]
    
    print("üß™ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö...\n")
    
    for name, lat, lon in locations:
        print(f"üìç {name}:")
        MockWeatherData.save_mock_data(lat, lon)
        print()
    
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!")


if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    create_test_dataset()
    
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    print("\n" + "="*60)
    print("–ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø MOCK –î–ê–ù–ù–´–•")
    print("="*60 + "\n")
    
    mock_source = MockWeatherDataSource()
    data = mock_source.get_historical_data(55.7558, 37.6173)
    
    print(f"\n–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫:")
    print(data.head())
    
    print(f"\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(data.describe())
